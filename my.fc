options( bank:0 );

use common;
use util;
use pad;
use bg;
use en;

const MY_STATE_STAND = 0;
const MY_STATE_JUMP = 2;
const MY_STATE_LADDER = 3; // はしご
const MY_STATE_ON_ENEMY = 4;
const MY_STATE_DIE = 255;

function get_cell(x:int, y:int):int
{
	if( y > 240 ){ return 0; }
	var c = BG_TYPE[bg_data[(y/16)*16 + x/16]];
	if( c & BG_TYPE_WALL ){
		if( c & BG_TYPE_FLOOR ){
			return (y % 16 < 8);
		}else{
			return 1;
		}
	}else{
		return 0;
	}
}

function get_cell_type(x:int, y:int):int
{
	return BG_TYPE[bg_data[(y/16)*16 + x/16]];
}

function my_check_on_enemy():int
{
	var i:int;
	for( i, 0, EN_MAX ){
		switch( en_type[i] ){
		case EN_TYPE_ELEVATOR:
			if( abs(my_x-en_x[i])<20 && my_y>=(en_y[i]-18) && my_y < (en_y[i]-10) ){
				my_y = en_y[i] - 16;
				return i;
			}
		case EN_TYPE_SLIME:
			if( abs(my_x-en_x[i])<14 && my_y>=(en_y[i]-12) && my_y < (en_y[i]-2) ){
				my_y = en_y[i] - 10;
				return i;
			}
		}
	}
	return -1;
}

function my_process():void
{
	// 水の中の処理
	var bi:int;
	var in_water = get_cell_type(my_x,my_y) & BG_TYPE_WATER;
	if( my_prev_in_water ^ in_water ){
		// 水に飛び込んだ飛沫を表示
		bi = en_new();
		en_type[bi] = EN_TYPE_SPLASH;
		en_x[bi] = my_x;
		en_y[bi] = (my_y+8)/16*16+8;
		en_p1[bi] = 8;
	}
	if( in_water ){
		if( anim % 64 == 0 ){
			bi = en_new();
			en_type[bi] = EN_TYPE_BUBBLE;
			en_x[bi] = my_x;
			en_y[bi] = my_y;
		}
		if( anim % 2 ){	return; }
	}
	my_prev_in_water = in_water;
	var limited_water = in_water && (my_water_setting==0);
	
	pad_a = pad_a | pad_up;
	vx = 0;
	my_anim += 1;
	
	// 縦移動
	switch( my_state ){
	case MY_STATE_STAND, MY_STATE_ON_ENEMY:
		// 地上
		
		// 左右移動
		if( pad_right ){ my_vx += 4; my_dir = 0; }
		if( pad_left ){ my_vx -= 4; my_dir = 1; }
		if( !pad_right && !pad_left ){ my_vx = 0; }
		if( my_vx > 16 ){ my_vx = 16; }
		if( my_vx < -16 ){ my_vx = -16; }
		vx = (my_vx+giff)/16;

		var evx = 0, evy = 0;
		if( my_state == MY_STATE_ON_ENEMY ){
			// 敵に乗ってる
			var ei = my_on_idx;
			evx += en_x[ei] - my_on_x;
			evy += en_y[ei] - my_on_y;
			my_on_x = en_x[ei];
			my_on_y = en_y[ei];
		}
		
		my_x += vx + evx;

		if( get_cell(my_x-4,my_y+6) || get_cell(my_x+4,my_y+6) || get_cell(my_x-4,my_y-4) || get_cell(my_x+4,my_y-4) ){
			my_x -= vx + evx;
		}
		
		if( pad_up && get_cell_type(my_x,my_y) & BG_TYPE_LADDER ){
			// はしごに登り始める
			my_state = MY_STATE_LADDER;
		}elsif( pad_down && get_cell_type(my_x,my_y+8) & BG_TYPE_LADDER ){
			// はしごに下り始める
			my_state = MY_STATE_LADDER;
			my_y += 8;
		}else{
			// 地上にいる
			if( my_state == MY_STATE_STAND ){
				if( !get_cell(my_x-4,my_y+8) && !get_cell(my_x+4,my_y+8) ){
					// 床から落ちた
					my_y += 1;
					my_state = MY_STATE_JUMP;
				}
			}else{
				// 敵に乗ってる
				if( my_check_on_enemy() != my_on_idx ){
					my_y += 1;
					my_state = MY_STATE_JUMP;
				}
			}
			if( !old_pad_a && pad_a ){
				// ジャンプした！
				my_y -= 1;
				vy = -36;
				jump_pow = 10;
				my_state = MY_STATE_JUMP;
			}
		}
	case MY_STATE_JUMP: // ジャンプ中
		// 空中にいる
		if( pad_right ){ my_vx += 1; my_dir = 0; }
		if( pad_left ){ my_vx -= 1; my_dir = 1; }
		if( !pad_left && !pad_right ){ my_vx -= sign(my_vx); }
		if( my_vx > 16 ){ my_vx = 16; }
		if( my_vx < -16 ){ my_vx = -16; }
		my_x += (my_vx+giff)/16;
		if( get_cell(my_x-4,my_y+8) || get_cell(my_x+4,my_y+8) || get_cell(my_x-4,my_y-4) || get_cell(my_x+4,my_y-4) ){
			my_x -= (my_vx+giff)/16;
		}
		if( limited_water ){ vy -= 4; }
		

		vy += 2;
		my_y += vy / 16;

		if( vy < 0 ){
			if( limited_water && vy < -16 ){ vy = -16; } // 水の中の制限
			//上昇中
			if( get_cell(my_x-4,my_y-4) || get_cell(my_x+4,my_y-4) ){
				my_y -= vy / 16;
				vy = 0;
				jump_pow = 0;
			}else{
				if( jump_pow ){
					jump_pow -= 1;
					if( pad_a ){
						vy -= 1;
					}else{
						vy += 22;
						jump_pow = 0;
					}
				}
			}
		}else{
			// 下降中
			if( vy > 64 ){ vy = 64; }
			if( limited_water && vy > 32 ){ vy = 32; } // 水の中の制限
			
			if( get_cell(my_x-4,my_y+8) || get_cell(my_x+4,my_y+8) ){
				// 着地
				vy = 0;
				my_y = (my_y+8)/16*16 - 8;
				my_state = MY_STATE_STAND;
			}else{
				my_on_idx = my_check_on_enemy();
				if( my_on_idx != -1 ){
					// 敵に乗った!
					my_state = MY_STATE_ON_ENEMY;
					vy = 0;
					my_on_x = en_x[my_on_idx];
					my_on_y = en_y[my_on_idx];
				}
			}
		}
	case MY_STATE_LADDER: // はしご
		my_x = (my_x/16)*16+8;
		if( (pad_right | pad_left ) & !get_cell(my_x,my_y) ){
			my_state = MY_STATE_JUMP;
		}elsif( pad_up ){
			// 登る
			if( get_cell_type(my_x,my_y-4) != BG_TYPE_WALL ){
				if( get_cell_type(my_x,my_y) & BG_TYPE_LADDER ){
					my_y -= 1;
				}else{
					my_y -= 8;
					my_state = MY_STATE_STAND;
				}
			}
		}elsif( pad_down ){
			// 降りる
			if( !(get_cell_type(my_x,my_y+7) & BG_TYPE_LADDER) ){
				my_y -= 1;
				my_state = MY_STATE_STAND;
			}else{
				my_y += 1;
			}
		}
	}

	// 刺
	var c = get_cell_type(my_x,my_y);
	if( c & BG_TYPE_SPIKE ){
		wait(100);
		my_state = MY_STATE_DIE;
	}

	old_pad_a = pad_a;

}

function my_draw():void
{
	var anim:int;
	switch( my_state ){
	case MY_STATE_STAND, MY_STATE_ON_ENEMY, MY_STATE_DIE:
		anim = ((my_anim/16)%2)*4;
		if( vx == 0 ){ anim = 0; }
		gr_sprite2( my_x, my_y, 1+anim, 64*my_dir );
	case MY_STATE_JUMP:
		if( vy > 128 ){
			gr_sprite2( my_x, my_y, 9, 64*my_dir );
		}else{
			gr_sprite2( my_x, my_y, 13, 64*my_dir );
		}
	case MY_STATE_LADDER:
		anim = (my_anim/16)%2;
		gr_sprite2( my_x, my_y, 17, 64*anim );
	}
}

function my_on_scroll(x:int, y:int):void
{
	my_x += x;
	my_y += y;
	my_draw();
}

