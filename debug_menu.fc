options( bank: -1 );

use common;
use menu;
use bg;
use ppu;

var last_checkpoint:int;
var debug_menu_move_area:void(int);

const DEBUG_MENU_PALLET:int[32] = [0x0f,0x27,0x38,0x30, 0x0f,0x06,0x15,0x36, 0x0f,0x13,0x23,0x33, 0x0f,0x11,0x12,0x13,
						0x19,0x0b,0x2b,0x30, 0x0f,0x06,0x15,0x36, 0x0f,0x13,0x23,0x33, 0x0f,0x11,0x12,0x13];

var debug_menu_num:int;
var debug_menu_items:int*[16];
var debug_menu_cur:int;
var debug_menu_title:int*;

function debug_menu_init():void
{
}

function debug_menu_start(name:int*):void
{
	debug_menu_title = name;
	debug_menu_num = 0;
	debug_menu_cur = 0;
}

function debug_menu_open():void{}

/*
function debug_menu_add(item:int*):void
{
	debug_menu_items[debug_menu_num] = item;
	debug_menu_num += 1;
}

function debug_menu_add_items( n:int, items:int** ):void
{
	var i:int;
	for( i, 0, n ){
		debug_menu_add(items[n]);
	}
}

const DEBUG_MENU_VRAM:int16 = 0x2400;

function debug_menu_select():int
{
	ppu.lock();
	MMC3_MIRROR = 0; // vertical
	ppu.ctrl1_bak = 0b10100001;
	ppu.ctrl2_bak = 0b00011110;
	ppu.scroll1 = 0;
	ppu.scroll2 = 0;
	ppu.fill_in_lock( DEBUG_MENU_VRAM, 0x0400, 0 );

	ppu_put( DEBUG_MENU_VRAM + 32*3 + 2, debug_menu_title, strlen(debug_menu_title) );
	
	var i:int;
	for(i, 0, debug_menu_num){
		ppu.put_in_lock( DEBUG_MENU_VRAM + 32*(i+5) + 4, debug_menu_items[i], strlen(debug_menu_items[i]) );
	}
	ppu.unlock();

	var pad_up_old = 0;
	var pad_down_old = 0;
	var pad_a_old = 0;
	var pad_b_old = 0;
	while(1){
		pad.update();
		
		if( !pad_up_old && pad_up && debug_menu_cur > 0 ){ debug_menu_cur -= 1; }
		if( !pad_down_old && pad_down && debug_menu_cur < debug_menu_num-1 ){ debug_menu_cur += 1; }
		if( !pad_a_old && pad_a ){ return debug_menu_cur; }
		if( !pad_b_old && pad_b ){ return -1; }

		gr_sprite( 3*8-2, 5*8-1+debug_menu_cur*8, 33, 0);
		wait_vsync();
	}
}

function debug_menu_open():void
{
	var old0 = mmc3_set_cbank(0,CBANK_TEXT+0);
	var old1 = mmc3_set_cbank(1,CBANK_TEXT+1);
	
	while(1){
		debug_menu_start( _T("メニュー") );
		debug_menu_add( _T("チェックポイント") );
		debug_menu_add( _T("終了") );
		switch( debug_menu_select() ){
		case 0:
			if( debug_menu_do_flag() ){ break; }
		case 1,-1:
			break;
		}
	}
	
	ppu.lock();
	ppu.ctrl1_bak = 0b10100000;
	ppu.ctrl2_bak = 0b00011110;
	ppu.scroll1 = 0;
	ppu.scroll2 = 0;
	mmc3.set_cbank(0,old0);
	mmc3.set_cbank(1,old1);
	ppu.unlock();
	ppu.wait_vsync();
}

function debug_menu_do_flag():int
{
	debug_menu_start(_T("チェックポイントを選択"));
	var i:int;
	for( i, 0, MAP_CHECKPOINT_NUM ){
		debug_menu_add( &MAP_CHECKPOINT_DATA[MAP_CHECKPOINT[i]+3] );
	}
	debug_menu_cur = last_checkpoint;
	
	var n = debug_menu_select();
	if( n == -1 ){ return 0; }

	last_checkpoint = n;
	var cp = &MAP_CHECKPOINT_DATA[MAP_CHECKPOINT[n]];
	my.x = cp[1]+8;
	my.y = cp[2]+8;
	my.vx = 0;
	my.vy = 0;
	my.my_vx = 0;
	my.my_vy = 0;
	var area = cp[0];
	
	debug_menu_move_area( area );

	return 1;
}

*/
