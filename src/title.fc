use * from common;
use mem;
use my;
use savedata;

const SCENE_FINISH = 0;
const SCENE_TITLE = 1;
const SCENE_CREDIT = 2;
const SCENE_SECRET_COMMAND = 3;
const SCENE_CLEAR_SAVEDATA = 4;

public function start():void
{
	ppu.ctrl1_bak = 0b10100000;
	ppu.ctrl2_bak = 0b00011110;
	ppu.scroll1 = 0;
	ppu.scroll2 = 0;
	
	var next_scene = 1;
	loop(){
		switch(next_scene){
		case SCENE_FINISH: break;
		case SCENE_TITLE: next_scene = do_title();
		case SCENE_CREDIT: next_scene = do_credit();
		case SCENE_SECRET_COMMAND: next_scene = do_secret_command();
		case SCENE_CLEAR_SAVEDATA: next_scene = do_clear_savedata();
		}
	}
}

public function do_title():int
{
	ppu.lock();
	ppu.put_in_lock( 0x3f00, PAL_SET, 16 );
	
	mmc3.set_cbank( 0, CBANK_TEXT );
	mmc3.set_cbank( 1, CBANK_TEXT+2 );
	mmc3.set_cbank( 2, CBANK_SPRITE+0 );

	ppu.fill_in_lock(0x2000, 256*4, 0);
	
	put_text_in_lock( ppu.pos(13, 8),  _T("CASTLE"));
	put_text_in_lock( ppu.pos(10,26), VERSION_STR() );
	if( debug_mode ) put_text_in_lock( ppu.pos(12,24), _T("［でばっぐもーど］") );
	if( savedata.exists ){
		put_text_in_lock( ppu.pos(13,14),_T("つづける") );
	}else{
		put_text_in_lock( ppu.pos(13,14),_T("はじめる") );
	}
	put_text_in_lock( ppu.pos(13,16), _T("データの初期化") );
	put_text_in_lock( ppu.pos(13,18), _T("クレジット") );

	ppu.unlock();

	var cursor = 0;
	const command = [pad.UP, pad.UP, pad.DOWN, pad.DOWN, pad.LEFT, pad.RIGHT, pad.LEFT, pad.RIGHT,
					 pad.SELECT, pad.START, 0 ];
	var command_idx = 0;

	while(1){
		pad.update();
		if( pad.pushed & pad.UP && cursor > 0 ){ cursor = cursor - 1; }
		if( pad.pushed & pad.DOWN && cursor < 2 ){ cursor = cursor + 1; }

		// 秘密のコマンド入力
		if( pad.pushed ){
			if( pad.pushed == command[command_idx] ){
				command_idx += 1;
				if( command[command_idx] == 0 ) return SCENE_SECRET_COMMAND;
			}else{
				command_idx = 0;
			}
		}
		
		if( pad.pushed & pad.A ){
			switch( cursor ){
			case 0: return SCENE_FINISH;
			case 1:	return SCENE_CLEAR_SAVEDATA;
			case 2: return SCENE_CREDIT;
			}
		}

		ppu.sprite( 10*8, cursor*16+(14*8), 4, 0 );
		ppu.wait_vsync();
	}
}

function put_text_in_lock(addr:int16, s:int*):void
{
	mem.set( ppu.gr_buf, 0, 64 );
	text_print( ppu.gr_buf, s );
	ppu.put_in_lock( addr, ppu.gr_buf, 64 );
}

function text_print(p:int*, str:int*):int
{
	var i = 0;
	var pi = 0;
	while(1){
		var c = str[i];
		if( c == 0 ){ break; }
		if( c == 3 || c == 4){
			p[pi-1] = c;
		}else{
			p[pi+32] = c;
			pi += 1;
		}
		i += 1;
	}
	return 0;
}

function do_credit():int
{
	ppu.lock();
	ppu.put_in_lock( 0x3f00, PAL_SET, 16 );
	ppu.fill_in_lock(0x2000, 256*4, 0);
	put_text_in_lock( ppu.pos(4, 6), _T("スタッフ") );
	put_text_in_lock( ppu.pos(6, 8), _T("プログラム・グラフィック　　　こんびなーとＨ") );
	put_text_in_lock( ppu.pos(6,10), _T("ステージデザイン　　　　　　　　　がんちゃん") );

	put_text_in_lock( ppu.pos(4,14), _T("ＴＨＡＮＫＳ") );
	put_text_in_lock( ppu.pos(6,16), _T("ドットエディタ　　　　　　　　　　ＥＤＧＥ２") );
	put_text_in_lock( ppu.pos(6,18), _T("マップエディタ　　　　　　　　　　ＴＩＬＥＤ") );
	put_text_in_lock( ppu.pos(6,20), _T("サウンドドライバ　　　　　　　　　　　ＮＳＤ") );
	put_text_in_lock( ppu.pos(6,22), _T("フォント　　　　　　　　　　　　美咲フォント") );
	ppu.unlock();

	loop(){
		pad.update();
		if( pad.pushed & (pad.A|pad.B) ) break;
		ppu.wait_vsync();
	}
	
	return SCENE_TITLE;
}

function do_secret_command():int
{
	debug_mode = 1;
	savedata.save();
	return SCENE_TITLE;
}

function do_clear_savedata():int
{
	ppu.lock();
	ppu.fill_in_lock(0x2000, 256*4, 0);
	ppu.put_in_lock( 0x3f00, PAL_SET, 16 );
	put_text_in_lock( ppu.pos(4,10), _T("データを初期化しますが、ほんとうによろしいですか？") );
	put_text_in_lock( ppu.pos(4,12), _T("スタートとセレクトを同時に押すとデータを消去します。") );
	put_text_in_lock( ppu.pos(4,14), _T("また、Ｂボタンでタイトルにもどります。") );
	ppu.unlock();

	loop(){
		pad.update();
		if( pad.cur == (pad.SELECT|pad.START) ){
			savedata.clear();
			savedata.load();
			break;
		}
		if( pad.pushed & (pad.A|pad.B) ) break;
		ppu.wait_vsync();
	}
	
	return SCENE_TITLE;
}
