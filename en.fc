options( bank: 1 );

use math;
use util;
use common;
use bg;
use en_types;
use pad;

/*********************************************
 * 敵関係のルーチン
 *********************************************/

/** 初期化する */
function en_init():void
{
}

function en_clear():void
{
	var i:int;
	for( i, 0, EN_MAX ){
		en_type[i] = 0;
	}
}

function en_process():void
{
	var i:int;
	for( i, 0, EN_MAX ){
		EN_PROCESS[en_type[i]](i);
	}
}

function en_new():int
{
	var i:int;
	for( i, 0, EN_MAX ){
		if( !en_type[i] ){ return i; }
	}
	return 255;
}

function abs(i:sint):int
{
	if( i >= 128 ){ return -i; }else{ return i; }
}

function en_check_hit(i:int, size:int):void
{
	if( abs(en_x[i] - my_x) < size && abs(en_y[i] - my_y) < size ){
		wait(10);
	}
}

/*********************************************
 * ダミー
 *********************************************/
function en_none_new():int { return 255; }
function en_none_process(i:int):void {}

/*********************************************
 * スライム
 *********************************************/

function slime_new(i:int):void
{
}

function slime_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var dir:sint = en_p1[i];
	var vy = en_p3[i];
	
	if( bg_cell_type(x-5,y+8) & BG_TYPE_WALL || bg_cell_type(x+5,y+8) & BG_TYPE_WALL ){
		// 地面の上
		var nx:uint = x+dir*8;
		if( nx < 8 || nx > 248 || bg_cell_type(nx,y-8) & BG_TYPE_STOP ){
			dir = -dir;
		}else{
			if( (anim%32) < 16 ){
				if( giff < 10 ){ x += dir; }
			}else{
				if( giff < 6 ){ x += dir; }
			}
		}
		vy = 0;
	}else{
		// 落ちる
		vy += anim % 2;
		if( vy > 12 ){ vy = 12; }
		y = y + (vy+giff)/16;
	}

	var flip:uint = (1-dir)/2;
	gr_sprite2( x, y, 128+(anim/16)%2*4, 64*flip | 1);

	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = dir;
	en_p3[i] = vy;
	
	en_check_hit(i,10);
}

/*********************************************
 * ウィルオーウィスプ
 *********************************************/
function wow_new(i:int):void
{
}

function wow_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var dir = en_p1[i];
	var speed = en_p2[i];

	switch( dir ){
	case 0: // 上
		if( y < 16 || bg_cell_type(x,y-8) & BG_TYPE_STOP ){
			dir = 2;
		}else{
			y -= (speed + giff ) / 16;
		}
	case 1: // 右
		if( x > 240 || bg_cell_type(x+8,y-8) & BG_TYPE_STOP ){
			dir = 3;
		}else{
			x += (speed + giff ) / 16;
		}
	case 2: // 下
		if( y > 240 || bg_cell_type(x,y+8) & BG_TYPE_STOP ){
			dir = 0;
		}else{
			y += (speed + giff ) / 16;
		}
	case 3: // 左
		if( x < 16 || bg_cell_type(x-8,y-8) & BG_TYPE_STOP ){
			dir = 1;
		}else{
			x -= (speed + giff ) / 16;
		}
	}

	var cx = x % 16;
	var cy = y % 16;
	if( cx >= 6 && cx <= 10 && cy >= 6 && cy <= 10 ){
		var c = bg_cell(x, y);
		if( c >= 4 && c < 8 && dir != c-4){
			x = x/16*16 + 8;
			y = y/16*16 + 8;
			dir = c - 4;
		}
	}

	gr_sprite2( x+rand()%4-2, y+rand()%4-2, 136+(anim/4)%2*4, anim%2 );

	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = dir;
	
	en_check_hit(i,8);
}

/*********************************************
 * エレベーター
 *********************************************/
function elevator_new(i:int):void
{
	en_x[i] += 8;
	if( en_p2[i] == 0 ){ en_p2[i] = 8; }
}

function elevator_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var dir = en_p1[i];
	var speed = en_p2[i];

	switch( dir ){
	case 0:
		y -= (giff+speed)/16;
		if( bg_cell_type(x,y-8) & BG_TYPE_STOP ){ dir = 2; }
	case 1:
		x += (giff+speed)/16;
		if( bg_cell_type(x+16,y) & BG_TYPE_STOP ){ dir = 3; }
	case 2:
		y += (giff+speed)/16;
		if( bg_cell_type(x,y+8) & BG_TYPE_STOP ){ dir = 0; }
	case 3:
		x -= (giff+speed)/16;
		if( bg_cell_type(x-16,y) & BG_TYPE_STOP ){ dir = 1; }
	}

	if( x < 16 || x > 240 || y < 16 || y > 240 ){ dir = (dir+2)%4; }
	
	gr_sprite2( x-8, y, 64, 0);
	gr_sprite2( x+8, y, 64, 64);
	
	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = dir;
}

/*********************************************
 * 水の中の泡
 *********************************************/
function bubble_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	
	x = x + rand()/128*2 - 1;
	y = y - (giff/8);

	gr_sprite( x-4, y-8, 34, 0);
	
	if( en_y[i] < 16 || (bg_cell_type(x,y-8) & BG_TYPE_WATER) == 0 ){
		en_type[i] = 0;
	}
	
	en_x[i] = x;
	en_y[i] = y;
}

/*********************************************
 * 水に入った時の飛沫
 *********************************************/
function splash_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var life = en_p1[i];

	if( anim % 2 ){
		gr_sprite2( x-4, y-8, 36, 0);
	}
	
	if( life ){
		life -= 1;
	}else{
		en_type[i] = 0;
	}
	
	en_p1[i] = life;
}

/*********************************************
 * 押せる岩
 *********************************************/
function block_new(i:int):void
{
}

function block_process(i:int):void
{
	if( anim % 8 != 0 ){ return; }
	var x = en_x[i];
	var y = en_y[i];
	var dir:sint = en_p1[i];
	var redraw = 0;
	var c:int;

	if( dir != 0 ){
		// 左右に動く
		c = bg_cell_type(x+dir*16,y);
		if( c == 0 || c == BG_TYPE_SPIKE ){
			x += dir*16;
			redraw = 1;
			dir = 0;
		}else{
			en_type[i] = 0;
			return;
		}
	}else{
		// 落下中
		c = bg_cell_type(x,y+16);
		if( c == 0 || c == BG_TYPE_SPIKE ){
			y += 16;
			if( y >= 240 ){
				bg_put2( en_x[i]/16, en_y[i]/16, 0, 0 );
				en_type[i] = 0;
				return;
			}
			redraw = 1;
		}else{
			en_type[i] = 0;
		}
	}

	if( redraw ){
		bg_put2( en_x[i]/16, en_y[i]/16, 0, 0 );
		bg_put2( x/16, y/16, 56, 0 );
		en_x[i] = x;
		en_y[i] = y;
	}

	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = dir;
}

/*********************************************
 * カエル
 *********************************************/
function frog_new(i:int):void
{
	en_p3[i] = 0;
	en_p4[i] = 30;
}

const EN_CHECK_TOP = 1;
const EN_CHECK_BOTTOM= 2;
const EN_CHECK_LEFT = 4;
const EN_CHECK_RIGHT = 8;

function en_check_block(px:int*, py:int*):int
{
	const size = 8;
	var x = *px;
	var y = *py;
	var r = 0;
	
	// 下方向
	if( bg_cell_type(x+4,y+(size-1)) & BG_TYPE_WALL || bg_cell_type(x-4,y+(size-1)) & BG_TYPE_WALL ){
		*py = (y+size)/16*16 - size;
		r = EN_CHECK_BOTTOM;
	}

	// 右方向
	if( bg_cell_type(x+(size-1),y) & BG_TYPE_STOP ){
		*px = (x+size)/16*16 - size;
		r = r | EN_CHECK_RIGHT;
	}elsif( x >= 240 ){
		*px = 239;
		r = r | EN_CHECK_RIGHT;
	}

	// 左方向
	if( bg_cell_type(x-size,y) & BG_TYPE_STOP ){
		*px = (x-size)/16*16 + 16 + size;
		r = r | EN_CHECK_LEFT;
	}elsif( x < 16 ){
		*px = 16;
		r = r | EN_CHECK_LEFT;
	}
	
	// 上方向
	if( bg_cell_type(x+4,y-size) & BG_TYPE_WALL || bg_cell_type(x-4,y-size) & BG_TYPE_WALL ){
		*py = (y-size)/16*16 + 16 + size;
		r = r | EN_CHECK_TOP;
	}
	
	return r;
}

function en_check_outsize(x:int, y:int):int
{
	return ( x >= 240 || x < 16 || y < 16 || y >= 240 );
}

function frog_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var dir = en_p1[i];
	var speed = en_p2[i];
	var state = en_p3[i];
	var t:sint = en_p4[i];
	var anim = 0;


	switch( state ){
	case 0:
		// stand
		if( t ){
			t -= 1;
		}else{
			state = 1;
			t = -32;
		}
	case 1:
		// jump
		y += (t+giff)/16;
		var d:sint = 2-dir;
		if( giff < 8 ){ x += d; }
		t += 1;
		var hit = en_check_block(&x,&y);
		if( hit & (EN_CHECK_RIGHT | EN_CHECK_LEFT) ){ dir = 4 - dir; }
		if( hit & EN_CHECK_BOTTOM ){
			state = 0;
			t = 30;
		}
		if( hit & EN_CHECK_TOP ){ t = 0; }
		
		if( en_check_outsize(x,y) ){
			en_type[i] = 0;
			return;
		}
	}
	
	var flip = 0;
	if( dir == 3 ){ flip = 1; }
	gr_sprite2( x, y, 160+state*4, 64*flip+2);
	
	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = dir;
	en_p3[i] = state;
	en_p4[i] = t;
	
	en_check_hit(i,8);
}

/*********************************************
 * クッキー
 *********************************************/
function cookie_new(i:int):void
{
	if( en_p3[i] == 0 ){ en_p3[i] = 2; }
	en_p4[i] = en_x[i];
	en_p5[i] = en_y[i];
}

function cookie_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];
	var angle = en_p1[i];
	var speed = en_p2[i];
	var size = en_p3[i];

	angle += speed;
	x = en_p4[i] + (cos(angle)>>size);
	y = en_p5[i] + (sin(angle)>>size);

	gr_sprite2( x+rand()%4-2, y+rand()%4-2, 136+(anim/4)%2*4, anim%2 );

	en_x[i] = x;
	en_y[i] = y;
	en_p1[i] = angle;
	
	en_check_hit(i,8);
}

/*********************************************
 * 宝箱
 *********************************************/
function chest_new(i:int):void
{
	if( my_items[en_p1[i]] ){
		en_type[i] = 0;
	}
}

function chest_process(i:int):void
{
	var x = en_x[i];
	var y = en_y[i];

	if( abs(my_x-x) < 16 && abs(my_y-y) < 16 ){
		game_event = GAME_EVENT_GET_ITEM;
		game_event_p1 = en_p1[i];
		
		my_items[en_p1[i]] = 1;
		en_type[i] = 0;
		return;
	}
	
	gr_sprite2( x, y-1, 96, 0 );

}

/*********************************************
 * 
 *********************************************/

const EN_PROCESS: void(int)[] = [ en_none_process,
								  slime_process,
								  wow_process,
								  elevator_process,
								  bubble_process,
								  splash_process,
								  block_process,
								  frog_process,
								  cookie_process,
								  chest_process
								  ];
const EN_NEW_FUNC: void(int)[] = [ en_none_process,
								   slime_new,
								   wow_new,
								   en_none_process,
								   en_none_process,
								   en_none_process,
								   block_new,
								   frog_new,
								   cookie_new,
								   chest_new
								   ];
