options( bank_count: 4 );
options( bank:0 );

use mmc3;
use nes;
use math;
use util;
use memory;
use pad;
use bg;
use common;

include('character.chr');

const PALLET:int[32] = [0x0f,0x27,0x38,0x30, 0x0f,0x06,0x15,0x36, 0x0f,0x13,0x23,0x33, 0x0f,0x11,0x12,0x13,
                        0x19,0x0b,0x2b,0x30, 0x0f,0x06,0x15,0x36, 0x0f,0x13,0x23,0x33, 0x0f,0x11,0x12,0x13];

use map_data;

var my_x:int, my_y:int;
var my_anim:int;
var vy:sint, vx:sint;
var my_dir:int;
var my_state:int;
var on_ground:int;
var old_pad_a:int;
var jump_pow:int;

const MY_STATE_STAND = 0;
const MY_STATE_WALK = 1;
const MY_STATE_JUMP = 2;

function get_cell(x:int, y:int):int
{
	if( y > 240 ){ return 0; }
	return MAP[bg_cur_area][(y/16)*16 + x/16];
}

function my_process():void
{

	// 横移動
	vx = 0;
	my_anim += 1;
	if( !(pad_right | pad_left) ){ my_state = MY_STATE_STAND; }
	if( pad_right ){ vx = 1; my_dir = 0; my_state = MY_STATE_WALK; }
	if( pad_left ){ vx = -1; my_dir = 1; my_state = MY_STATE_WALK; }
	my_x += vx;
	if( get_cell(my_x-5,my_y-1) || get_cell(my_x+5,my_y-1) || get_cell(my_x-5,my_y-10) || get_cell(my_x+5,my_y-10) ){
		my_x -= vx;
	}
	
	// 縦移動
	if( on_ground ){
		// 地上にいる
		if( get_cell(my_x-5,my_y) == 0 && get_cell(my_x+5,my_y) == 0){
			my_y += 1;
			on_ground = 0;
		}elsif( !old_pad_a && pad_a ){
			// ジャンプした！
			my_y -= 1;
			vy = -36;
			jump_pow = 10;
			on_ground = 0;
		}
	}else{
		// 空中にいる
		my_state = MY_STATE_JUMP;
		vy += 2;
		my_y += vy / 16;
		if( vy > 128 ){
			//上昇中
			if( get_cell(my_x-5,my_y-10) || get_cell(my_x+5,my_y-10) ){
				my_y -= vy / 16;
				vy = 0;
				jump_pow = 0;
			}else{
				if( jump_pow ){
					jump_pow -= 1;
					if( pad_a ){
						vy -= 1;
					}else{
						vy += 22;
						jump_pow = 0;
					}
				}
			}
		}else{
			// 下降中
			if( vy > 40 ){ vy = 40; }
			if( get_cell(my_x-5,my_y) || get_cell(my_x+5,my_y) ){
				vy = 0;
				my_y = my_y/16 * 16;
				on_ground = 1;
			}
		}
	}

	old_pad_a = pad_a;

}

function gr_sprite2(x:int, y:int, pat:int, flag:int):void
{
	if( flag & (1<<6) ){
		gr_sprite( x, y-8, pat, flag );
		gr_sprite( x-8, y-8, pat+2, flag );
	}else{
		gr_sprite( x, y-8, pat+2, flag );
		gr_sprite( x-8, y-8, pat, flag );
	}
}

function my_draw():void
{
	switch( my_state ){
	case MY_STATE_STAND, MY_STATE_WALK:
		var anim = ((my_anim/16)%2)*4;
		if( my_state == MY_STATE_STAND ){ anim = 0; }
		if( my_dir == 0 ){
			gr_sprite( my_x-8, my_y-16, 1+anim, 0 );
			gr_sprite( my_x, my_y-16, 3+anim, 0 );
		}else{
			gr_sprite( my_x, my_y-16, 1+anim, 64 );
			gr_sprite( my_x-8, my_y-16, 3+anim, 64 );
		}
	case MY_STATE_JUMP:
		if( vy > 128 ){
			gr_sprite2( my_x, my_y-8, 9, 64*my_dir );
		}else{
			gr_sprite2( my_x, my_y-8, 13, 64*my_dir );
		}
	}
}

function my_on_scroll(x:int, y:int):void
{
	my_x += x;
	my_y += y;
	my_draw();
}

function ppu_fill(addr:int16, size:int16, n:int):void;

function main(): void
{
	ppu_lock();
	ppu_init();
	bg_init();

	APU_INTERRUPT = 0x40; // disable APU IRQ
	MMC3_MIRROR = 1; // horizontal
	
	ppu_ctrl1_bak = 0b10100000;
	ppu_ctrl2_bak = 0b00011110;
	ppu_scroll1 = 0;
	ppu_scroll2 = 0;
	gr_idx = 0;

	// パレットの初期化
	ppu_put( 0x3f00, PALLET, 32 );

	draw_screen(0);
	bg_on_scroll = my_on_scroll;

	ppu_unlock();
	
	asm( "cli" );

	my_x = 100;
	my_y = 180;
	my_dir = 0;
	vx = 0;
	vy = 0;
	on_ground = 0;
	old_pad_a = 0;
	
	while( 1 ){
		pad_update();
		my_process();
		my_draw();
		wait_vsync();
		if( my_x < 16 ){
			scroll_left();
		}elsif( my_x >= 248 ){
			scroll_right();
		}elsif( my_y >= 240 ){
			scroll_down();
		}elsif( my_y < 8 ){
			scroll_up();
		}
	}
  
}

